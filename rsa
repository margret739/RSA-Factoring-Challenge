#!/usr/bin/python3

import time
import math
import sys

def pollard_rho(n):
    if n % 2 == 0:
        return 2

    x = 2
    y = 2
    z = 1

    #define the function for generating the next value
    # in the sequence
    f = lambda x: (x**2 + 1) % n

    # pollards rho algorith
    while d == 1:
        #generate new values for x and y using the fumction f(x)
        x = f(x)
        y = f(f(y))
        d = math.gcd(abs(x - y), n)

    return d

def is_prime(num):
    #check if a number is prime
    if num < 2:
        #if num is less than 2, it is not prime, so return False
        return False
    for i in range(2, int(math.sqrt(num)) + 1):
        #if num is divisible by any number in the range [2, sqrt(num)],\
        #it is not prime, so return False
        if num % i == 0:
            return False
        #if num is not divisible by any number in the \
        #range[2, sqrt(num)], it is prime, so return True
    return True

def main():
    #check if the correct number of command_line argument is provided
    if len(sys.argv) != 2:
        print("Usage: python factorize.py <file>")
        return

    file_path = sys.argv[1]

    start_time = time.time()
    try:
        with open(file_path,'r')as file:
            #Read the first line of the file and convert it to an integer
            number = int(file.readline().strip())
        b = pollard_rho(number)
        #continue factorizing until a prime factor is found
        while not is_prime(p):
            b = pollard_rho(p)
        q = number // b
        # the number is prime
        if b == number or q == number:
            print(f"{number} is prime.")
        else:
            #print the prime factors
            print(f"{number}={b}*{q}")

        if time.time() - start_time > 5:
            print("Time limit exceeded")
            exit()
    
    except FileNotFoundError:
        print(f"File'{file_path}' not found.")

    if __name__ == "__main__":
        main()
